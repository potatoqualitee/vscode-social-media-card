{
  "name": "social-card-generator",
  "displayName": "Social Media Card Generator",
  "description": "Generate social media cards for blog posts using AI",
  "version": "0.0.1",
  "publisher": "your-publisher-name",
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "enabledApiProposals": [
    "languageModels"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "socialCardContainer",
          "title": "Social Cards",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "socialCardContainer": [
        {
          "type": "webview",
          "id": "socialCardView",
          "name": "Card Generator"
        }
      ]
    },
    "configuration": {
      "title": "Social Card Generator",
      "properties": {
        "socialCardGenerator.numberOfDesigns": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 10,
          "description": "Number of design variations to generate (1-10)"
        },
        "socialCardGenerator.useSeparateRequestsForPremiumModels": {
          "type": "boolean",
          "default": false,
          "description": "When using premium models (non-OpenAI), generate designs with separate API calls for better quality. Note: This will use more API credits. OpenAI models always use separate requests as they are free."
        },
        "socialCardGenerator.promptMode": {
          "type": "string",
          "enum": [
            "default",
            "append",
            "custom"
          ],
          "default": "default",
          "enumDescriptions": [
            "Use the default design prompt",
            "Append your custom instructions to the default prompt",
            "Use a completely custom prompt (with template variables)"
          ],
          "description": "Choose how to customize the AI design prompt"
        },
        "socialCardGenerator.customPromptInstructions": {
          "type": "string",
          "default": "",
          "editPresentation": "multilineText",
          "markdownDescription": "Your custom prompt instructions. **Append mode**: Add extra direction to the default prompt. **Custom mode**: Write your own prompt using template variables: `{{title}}`, `{{summary}}`, `{{width}}`, `{{height}}`, `{{designNumber}}`, `{{numberOfDesigns}}`. Technical requirements (JSON format, HTML/CSS) will be automatically included."
        },
        "socialCardGenerator.loadingAnimation": {
          "type": "string",
          "enum": [
            "spinner",
            "progress",
            "debug"
          ],
          "default": "spinner",
          "enumDescriptions": [
            "Show a simple spinning animation",
            "Show a progress bar with percentage",
            "Show detailed debug information about the generation process"
          ],
          "description": "Choose the type of loading animation to display during card generation"
        },
        "socialCardGenerator.exportSaveMode": {
          "type": "string",
          "enum": [
            "prompt",
            "relative",
            "absolute"
          ],
          "default": "prompt",
          "enumDescriptions": [
            "Always show save dialog to choose location",
            "Save to 'social-cards' folder in workspace root",
            "Save to a specific absolute path (configured separately)"
          ],
          "description": "Choose how exported PNG files are saved"
        },
        "socialCardGenerator.exportAbsolutePath": {
          "type": "string",
          "default": "",
          "description": "Absolute path for saving exported PNGs (only used when exportSaveMode is 'absolute')"
        },
        "socialCardGenerator.alwaysUseMiniForSummary": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Always use a Copilot GPT mini model for blog post summarization (Step 1), even when using CLI or OpenAI-Compatible API models. This can save costs but requires GitHub Copilot to be active."
        },
        "socialCardGenerator.openaiCompatible.baseUrl": {
          "type": "string",
          "default": "",
          "markdownDescription": "Base URL for OpenAI-Compatible API. Examples:\n- Ollama: `http://localhost:11434/v1`\n- Azure: `https://YOUR_RESOURCE.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT`\n- LM Studio: `http://localhost:1234/v1`"
        },
        "socialCardGenerator.openaiCompatible.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for OpenAI-Compatible API (leave empty for Ollama, required for Azure)"
        },
        "socialCardGenerator.openaiCompatible.modelName": {
          "type": "string",
          "default": "",
          "markdownDescription": "Model name or deployment name. Examples:\n- Ollama: `llama3.1`, `qwen2.5-coder`\n- Azure: your deployment name\n- LM Studio: model name from the UI"
        },
        "socialCardGenerator.openaiCompatible.ollamaModelName": {
          "type": "string",
          "default": "",
          "markdownDescription": "Model name to use with 'ollama run' CLI command. Leave empty to auto-detect running model or use last selected. Examples: `llama3.1`, `qwen2.5-coder`"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "node esbuild.js --production",
    "watch": "node esbuild.js --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/node": "^20.x",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "esbuild": "^0.25.11",
    "eslint": "^8.57.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "openai": "^6.6.0"
  }
}
